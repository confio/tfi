{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "deposit_escrow"
      ],
      "properties": {
        "deposit_escrow": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "return_escrow"
      ],
      "properties": {
        "return_escrow": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "propose"
      ],
      "properties": {
        "propose": {
          "type": "object",
          "required": [
            "description",
            "proposal",
            "title"
          ],
          "properties": {
            "description": {
              "type": "string"
            },
            "proposal": {
              "$ref": "#/definitions/ProposalContent"
            },
            "title": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "vote"
      ],
      "properties": {
        "vote": {
          "type": "object",
          "required": [
            "proposal_id",
            "vote"
          ],
          "properties": {
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "vote": {
              "$ref": "#/definitions/Vote"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "execute"
      ],
      "properties": {
        "execute": {
          "type": "object",
          "required": [
            "proposal_id"
          ],
          "properties": {
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "close"
      ],
      "properties": {
        "close": {
          "type": "object",
          "required": [
            "proposal_id"
          ],
          "properties": {
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "This allows the caller to exit from the group",
      "type": "object",
      "required": [
        "leave_dso"
      ],
      "properties": {
        "leave_dso": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "This checks any batches whose grace period has passed, and who have not all paid escrow. Run through these groups and promote anyone who has paid escrow. This also checks if there's a pending escrow that needs to be applied.",
      "type": "object",
      "required": [
        "check_pending"
      ],
      "properties": {
        "check_pending": {
          "type": "object"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "DsoAdjustments": {
      "type": "object",
      "properties": {
        "allow_end_early": {
          "description": "If true, and absolute threshold and quorum are met, we can end before voting period finished",
          "type": [
            "boolean",
            "null"
          ]
        },
        "escrow_amount": {
          "description": "Escrow amount to apply after grace period (computed using voting_period)",
          "anyOf": [
            {
              "$ref": "#/definitions/Uint128"
            },
            {
              "type": "null"
            }
          ]
        },
        "name": {
          "description": "Escrow name",
          "type": [
            "string",
            "null"
          ]
        },
        "quorum": {
          "description": "quorum requirement (0.0-1.0)",
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        },
        "threshold": {
          "description": "threshold requirement (0.5-1.0)",
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal"
            },
            {
              "type": "null"
            }
          ]
        },
        "voting_period": {
          "description": "Length of voting period in days",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        }
      }
    },
    "ProposalContent": {
      "anyOf": [
        {
          "description": "Apply a diff to the existing non-voting members. Remove is applied after add, so if an address is in both, it is removed",
          "type": "object",
          "required": [
            "add_remove_non_voting_members"
          ],
          "properties": {
            "add_remove_non_voting_members": {
              "type": "object",
              "required": [
                "add",
                "remove"
              ],
              "properties": {
                "add": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "remove": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "edit_dso"
          ],
          "properties": {
            "edit_dso": {
              "$ref": "#/definitions/DsoAdjustments"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "add_voting_members"
          ],
          "properties": {
            "add_voting_members": {
              "type": "object",
              "required": [
                "voters"
              ],
              "properties": {
                "voters": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "punish_members"
          ],
          "properties": {
            "punish_members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Punishment"
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Punishment": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "DistributeEscrow"
          ],
          "properties": {
            "DistributeEscrow": {
              "type": "object",
              "required": [
                "distribution_list",
                "kick_out",
                "member",
                "slashing_percentage"
              ],
              "properties": {
                "distribution_list": {
                  "description": "Distribution list to send member's slashed escrow amount. If empty (and `burn_tokens` is false), funds are kept in member's escrow. `slashing_percentage` is irrelevant / ignored in that case",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "kick_out": {
                  "description": "If set to false, slashed member is demoted to `Pending`. Or not demoted at all, depending on the amount of funds he retains in escrow. If set to true, slashed member is effectively demoted to `Leaving`",
                  "type": "boolean"
                },
                "member": {
                  "description": "Member to slash / expel",
                  "type": "string"
                },
                "slashing_percentage": {
                  "description": "Slashing percentage",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Decimal"
                    }
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "BurnEscrow"
          ],
          "properties": {
            "BurnEscrow": {
              "type": "object",
              "required": [
                "kick_out",
                "member",
                "slashing_percentage"
              ],
              "properties": {
                "kick_out": {
                  "description": "If set to false, slashed member is demoted to `Pending`. Or not demoted at all, depending on the amount of funds he retains in escrow. If set to true, slashed member is effectively demoted to `Leaving`",
                  "type": "boolean"
                },
                "member": {
                  "description": "Member to slash / expel",
                  "type": "string"
                },
                "slashing_percentage": {
                  "description": "Slashing percentage",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Decimal"
                    }
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "Vote": {
      "type": "string",
      "enum": [
        "yes",
        "no",
        "abstain",
        "veto"
      ]
    }
  }
}
